name: Deploy

on:
  workflow_dispatch:
    inputs:               
      environment:
        description: 'Environment'
        required: true
        type: choice
        options:
          - 'sandbox'
      type:
        description: 'Terraform Run Type'
        required: true
        type: choice
        options:
          - 'plan'
          - 'apply'
          - 'destroy'
      commit_sha:
        description: "Git commit SHA of the GHCR image"
        required: false


jobs:
  ecr-publish:
    runs-on: ubuntu-latest-arm
    
    environment: ${{ github.event.inputs.environment }} 
    
    env:             
      AWS_ACCOUNT: ${{ vars.AWS_ACCOUNT }}
      AWS_REGION: ${{ vars.AWS_REGION }}      
      TF_WORKSPACE: ${{ github.event.inputs.environment }}
      TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}
      
    permissions:
      id-token: write 
      contents: read   
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/github-${{ github.event.repository.name }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}
      
      - name: Log in to GHCR
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Log in to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Push Image to ECR        
        run: | 
          docker pull ghcr.io/${{ github.repository }}:${{ github.event.inputs.commit_sha || github.sha }}
          docker tag ghcr.io/${{ github.repository }}:${{ github.event.inputs.commit_sha || github.sha }} $(make which-ecr-repo):${{ github.event.inputs.commit_sha || github.sha }}-${{ github.run_number }}
          docker push $(make which-ecr-repo):${{ github.event.inputs.commit_sha || github.sha }}-${{ github.run_number }}

  deploy:
    needs: ecr-publish
    runs-on: ubuntu-latest-arm

    permissions:
      id-token: write 
      contents: read   

    environment: ${{ github.event.inputs.environment }} 

    env:
      AWS_ACCOUNT: ${{ vars.AWS_ACCOUNT }}
      AWS_REGION: ${{ vars.AWS_REGION }}
      TF_WORKSPACE: ${{ github.event.inputs.environment }}
      TF_STATE_BUCKET: ${{ vars.TF_STATE_BUCKET }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT }}:role/github-${{ github.event.repository.name }}
          role-session-name: GitHub_to_AWS_via_FederatedOIDC
          aws-region: ${{ vars.AWS_REGION }}

      - name: Fetching GitHub App token to access private repositories
        uses: actions/create-github-app-token@v1
        id: tf-modules-auth
        with:
          app-id: ${{ secrets.TF_MODULES_APP_ID }}
          private-key: ${{ secrets.TF_MODULES_PK }}
          owner: ${{ github.repository_owner }}

      - name: Configure git client to use GitHub App token
        run:  git config --global url."https://x-access-token-:${{ steps.tf-modules-auth.outputs.token }}@github.com/".insteadOf "ssh://git@github.com/"

      - name: Terraform Init
        run: make tf-init

      - name: Terraform Run
        run: IMAGE_TAG=${{ github.event.inputs.commit_sha || github.sha }}-${{ github.run_number }} make tf-${{ github.event.inputs.type }}